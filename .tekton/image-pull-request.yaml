apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/openshift/boilerplate?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: '3'
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "pull_request" &&
      target_branch == "master" &&
      (
        "config/***".pathChanged() ||
        ".tekton/image-pull-request.yaml".pathChanged() ||
        "boilerplate/***".pathChanged() ||
        "test/***".pathChanged()
      )
  creationTimestamp:
  labels:
    appstudio.openshift.io/application: boilerplate-master
    appstudio.openshift.io/component: image
    pipelines.appstudio.openshift.io/type: build
  name: image-on-pull-request
  namespace: boilerplate-cicada-tenant
spec:
  params:
    - name: git-url
      value: '{{source_url}}'
    - name: revision
      value: '{{revision}}'
    - name: output-image
      value: quay.io/redhat-user-workloads/boilerplate-cicada-tenant/boilerplate-master/image:on-pr-{{revision}}
    - name: image-expires-after
      value: 5d
    - name: dockerfile
      value: config/Dockerfile
    - name: build-source-image
      value: 'true'
  taskRunSpecs:
    - computeResources:
        limits:
          memory: 4Gi
      pipelineTaskName: build-container
    - computeResources:
        limits:
          memory: 4Gi
      pipelineTaskName: ecosystem-cert-preflight-checks
  taskRunTemplate:
    serviceAccountName: build-pipeline-image
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        metadata:
          creationTimestamp:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
  pipelineRef:
    resolver: git
    params:
      - name: url
        value: https://github.com/openshift/boilerplate
      - name: revision
        value: "{{ revision }}"
      - name: pathInRepo
        value: pipelines/docker-build-oci-ta/pipeline.yaml
status: {}
